{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.jsx","components/Upload/UploadButton.jsx","components/Cards/TitleCard.jsx","components/Table/Table.jsx","components/Dropdown/Dropdown.jsx","components/Upload/UploadDropdown.jsx","components/Upload/Upload.jsx","App.js","index.js"],"names":["module","exports","generateNameLabels","data","participants","map","person","name","Date","prototype","addDays","days","date","this","valueOf","setDate","getDate","toShortFormat","day","monthName","getMonth","year","getFullYear","generateDateRange","dt1","messages","length","timestamp_ms","dt2","dates","newdt","monthDiff","diff","getTime","Math","abs","round","diff_months","console","log","diffDays","ceil","i","push","generateDateLabels","datum","renderFrequencyData","user","count","countArr","forEach","message","sender_name","currDate","closest","reduce","prev","curr","Object","entries","value","renderData","type","swears","countNWord","countSwearWord","countMessages","content","split","word","toLowerCase","NWords","swear_words","Chart","props","users","title","chart","userData","numOfParticipants","labels","datasets","participant","index","label","fill","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","height","width","options","responsive","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","yAxes","lineChart","barChart","useStyles","makeStyles","theme","input","UploadButton","classes","useState","file","useEffect","accept","className","id","onChange","e","handleUpload","target","files","multiple","htmlFor","Button","variant","component","startIcon","size","TitleCard","Card","styles","card","CardContent","Typography","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","padding","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","primary","main","lighten","light","text","dark","flex","EnhancedTableToolbar","Toolbar","clsx","paper","marginBottom","table","minWidth","border","clip","margin","overflow","position","top","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","min","Box","m","Paper","TableContainer","Table","aria-labelledby","aria-label","checked","newSelecteds","array","n","TableBody","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","labelId","messageCount","nWordCount","swearWordCount","hover","selectedIndex","indexOf","newSelected","concat","handleClick","role","tabIndex","scope","Number","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","formControl","maxWidth","Dropdown","FormControl","InputLabel","Select","defaultValue","changeChart","MenuItem","UploadDropdown","renderOptions","option","handleChange","Upload","Grid","container","alignItems","justify","item","App","initArray","message1","state","messageData","ChartDisplay","bind","changeData","render","read","FileReader","readAsText","onloadend","JSON","parse","result","setState","find","currMessage","Component","colorTheme","createMuiTheme","lightBlue","secondary","indigo","ReactDOM","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c6afe8e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","import React from 'react';\nimport messageCounter from '../../helpers/JSONProcessing';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst generateNameLabels = data => {\n  const participants = data.participants.map(person => person.name);\n  return participants;\n};\n\nDate.prototype.addDays = function (days) {\n  let date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nDate.prototype.toShortFormat = function () {\n  let monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  let day = this.getDate();\n\n  let monthIndex = this.getMonth();\n  let monthName = monthNames[monthIndex];\n\n  let year = this.getFullYear();\n\n  return `${monthName} ${day}, ${year}`;\n};\n\nconst diff_months = (dt1, dt2) => {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= 60 * 60 * 24 * 7 * 4;\n  return Math.abs(Math.round(diff));\n};\n\nconst generateDateRange = data => {\n  let dt1 = new Date(data.messages[data.messages.length - 1].timestamp_ms);\n  let dt2 = new Date(data.messages[0].timestamp_ms);\n  let dates = [];\n  let newdt = dt1;\n  let monthDiff = diff_months(dt1, dt2);\n  console.log(monthDiff);\n\n  const diffDays = Math.ceil((dt2 - dt1) / (1000 * 60 * 60 * 24));\n  for (let i = 0; i < diffDays; i += diffDays / 10) {\n    newdt = newdt.addDays(diffDays / 10);\n    dates.push(newdt);\n  }\n  return dates;\n};\n\nconst generateDateLabels = data => {\n  return generateDateRange(data).map(datum => datum.toShortFormat());\n};\n\nconst renderFrequencyData = (data, user) => {\n  const count = {};\n  const countArr = [];\n  const dates = generateDateRange(data).map(date => date.getTime());\n  dates.forEach(date => {\n    count[date] = 0;\n  });\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      let currDate = message.timestamp_ms;\n      let closest = dates.reduce(function (prev, curr) {\n        return Math.abs(curr - currDate) < Math.abs(prev - currDate)\n          ? curr\n          : prev;\n      });\n      count[closest] += 1;\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst renderData = (data, type, swears) => {\n  if (type === 'N-Word Count') {\n    return countNWord(data, swears);\n  } else if (type === 'Swear Word Count') {\n    return countSwearWord(data, swears);\n  } else if (type === 'Message Count') {\n    return countMessages(data);\n  }\n};\n\nconst countMessages = data => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    count[message.sender_name] += 1;\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst countNWord = (data, swears) => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    if ('content' in message) {\n      message.content.split(' ').forEach(word => {\n        if (word.toLowerCase() in swears.NWords) {\n          count[message.sender_name] += 1;\n        }\n      });\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst countSwearWord = (data, swears) => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    if ('content' in message) {\n      message.content.split(' ').forEach(word => {\n        if (word.toLowerCase() in swears.swear_words) {\n          count[message.sender_name] += 1;\n        }\n      });\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst lineChart = userData => {\n  const numOfParticipants = userData.participants.length;\n  const data = {\n    labels: generateDateLabels(userData),\n    datasets: userData.participants.map((participant, index) => {\n      return {\n        label: participant.name,\n        fill: 'false',\n        backgroundColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},0.8)`,\n        borderColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        hoverBorderColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        data: renderFrequencyData(userData, participant.name),\n      };\n    }),\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    legend: { display: true },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n    },\n  };\n\n  return <Line data={data} height={400} width={600} options={options} />;\n};\n\nconst barChart = (userData, type, swears) => {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n    },\n  };\n  const data = {\n    labels: generateNameLabels(userData),\n    datasets: [\n      {\n        label: 'Number of Messages',\n        backgroundColor: 'rgba(30,150,243,0.8)',\n        borderColor: 'rgba(30,150,243,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(30,150,243,1)',\n        hoverBorderColor: 'rgba(30,150,243,1)',\n        data: renderData(userData, type, swears),\n      },\n    ],\n  };\n  return <Bar data={data} height={400} width={600} options={options} />;\n};\n\nconst Chart = props => {\n  return (\n    <div>\n      <h2>{props.users.title}</h2>\n      {props.chart === 'Message Frequency'\n        ? lineChart(props.users)\n        : barChart(props.users, props.chart, props.swears)}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none',\n  },\n}));\n\nconst UploadButton = props => {\n  const classes = useStyles();\n  const [file, setFile] = useState([]);\n  const [uploadedFile, setUploadedFile] = useState({});\n\n  useEffect(() => {\n    console.log(file);\n  }, [file]);\n\n  const onChange = e => {\n    props.handleUpload(e.target.files[0]);\n  };\n\n  const handleChange = async () => {\n    console.log(file);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.log('There was a problem with the server');\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <>\n      <input\n        accept='json/*'\n        className={classes.input}\n        name='file'\n        id='contained-button-file'\n        onChange={onChange}\n        multiple\n        type='file'\n      />\n      <label htmlFor='contained-button-file'>\n        <Button\n          variant='contained'\n          color='primary'\n          component='span'\n          startIcon={<CloudUploadIcon />}\n          size='large'\n        >\n          Upload\n        </Button>\n      </label>\n    </>\n  );\n};\n\nexport default UploadButton;\n","import React from 'react';\nimport { Card, CardTitle, CardContent, Typography } from '@material-ui/core';\nimport styles from './Cards.module.css'\n\nconst TitleCard = () => {\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <Typography variant=\"h2\">Group Chat of Monkeys</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default TitleCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  makeStyles,\n  lighten,\n  Box,\n} from '@material-ui/core';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'User' },\n  {\n    id: 'vulgarity',\n    numeric: true,\n    disablePadding: false,\n    label: 'Vulgarity Index',\n  },\n  {\n    id: 'message_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'Message Count',\n  },\n  {\n    id: 'n_word_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'N Word Count',\n  },\n  {\n    id: 'activity_index',\n    numeric: true,\n    disablePadding: false,\n    label: 'Swear Word Count',\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'></TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.primary.main,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar className={clsx(classes.root)}>\n      <Typography\n        className={classes.title}\n        variant='h6'\n        id='tableTitle'\n        component='div'\n      >\n        Group Members\n      </Typography>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst countMessages = (data, user) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      count += 1;\n    }\n  });\n  return count;\n};\n\nconst countNWord = (data, user, swears) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      if ('content' in message) {\n        message.content.split(' ').forEach(word => {\n          if (word.toLowerCase() in swears.NWords) {\n            count += 1;\n          }\n        });\n      }\n    }\n  });\n  return count;\n};\n\nconst countSwearWord = (data, user, swears) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      if ('content' in message) {\n        message.content.split(' ').forEach(word => {\n          if (word.toLowerCase() in swears.swear_words) {\n            count += 1;\n          }\n        });\n      }\n    }\n  });\n  return count;\n};\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('swear_word_count');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.users.participants.array.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, props.users.participants.length - page * rowsPerPage);\n\n  return (\n    <Box m={1}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}\n            aria-label='enhanced table'\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.users.participants.length}\n            />\n            <TableBody>\n              {stableSort(\n                props.users.participants,\n                getComparator(order, orderBy)\n              )\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const messageCount = countMessages(props.users, row.name);\n                  const nWordCount = countNWord(\n                    props.users,\n                    row.name,\n                    props.swears\n                  );\n                  const swearWordCount = countSwearWord(\n                    props.users,\n                    row.name,\n                    props.swears\n                  );\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={row.name}\n                    >\n                      <TableCell padding='checkbox'></TableCell>\n                      <TableCell\n                        component='th'\n                        id={labelId}\n                        scope='row'\n                        padding='none'\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align='right'>\n                        {Number(\n                          Math.round(\n                            (swearWordCount / messageCount) * 10 + 'e3'\n                          ) + 'e-3'\n                        )}\n                      </TableCell>\n                      <TableCell align='right'>{messageCount}</TableCell>\n                      <TableCell align='right'>{nWordCount}</TableCell>\n                      <TableCell align='right'>{swearWordCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={props.users.participants.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 700,\n  },\n}));\n\nfunction Dropdown(props) {\n  const classes = useStyles();\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel id='demo-simple-select-outlined-label'>Graph Type</InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        defaultValue='Message Frequency'\n        onChange={e => props.changeChart(e.target.value)}\n        label='graph-type'\n      >\n        <MenuItem value='Message Frequency'>Message Frequency</MenuItem>\n        <MenuItem value='Message Count'>Message Count</MenuItem>\n        <MenuItem value='N-Word Count'>N-Word Count</MenuItem>\n        <MenuItem value='Swear Word Count'>Swear Word Count</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 700,\n  },\n}));\n\nfunction UploadDropdown(props) {\n  const classes = useStyles();\n\n  const renderOptions = props.options.map(option => {\n    return <MenuItem value={option.title}> {option.title}</MenuItem>;\n  });\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel id='demo-simple-select-outlined-label'>\n        Chat Selection\n      </InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        defaultValue={props.options[0].title}\n        onChange={e => props.handleChange(e.target.value)}\n        label='Chat-Selection'\n      >\n        {renderOptions}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default UploadDropdown;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UploadDropdown from './UploadDropdown';\nimport UploadButton from './UploadButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst Upload = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems='center' justify='center'>\n        <Grid item>\n          <UploadButton handleUpload={props.handleUpload} />\n        </Grid>\n        <Grid item>\n          <UploadDropdown\n            options={props.messages}\n            handleChange={props.handleChange}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Chart,\n  TitleCard,\n  EnhancedTable,\n  Dropdown,\n  Upload,\n} from './components';\nimport styles from './App.module.css';\nimport message1 from './data/message_sample.json';\nimport swears from './data/swears.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const initArray = [message1];\n    this.state = {\n      messages: initArray,\n      messageData: message1,\n      ChartDisplay: 'Message Frequency',\n    };\n\n    this.changeChart = this.changeChart.bind(this);\n    this.changeData = this.changeData.bind(this);\n    this.render = this.render.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleUpload(file) {\n    let read = new FileReader();\n    let data;\n    read.readAsText(file);\n    read.onloadend = () => {\n      data = JSON.parse(read.result);\n      this.setState({ messages: [...this.state.messages, data] });\n    };\n  }\n\n  changeChart(chart) {\n    this.setState({ ChartDisplay: chart });\n  }\n\n  changeData(name) {\n    let message = this.state.messages.find(\n      currMessage => currMessage.title === name\n    );\n    console.log(message);\n    this.setState({ messageData: message });\n  }\n\n  render() {\n    const { messages, messageData, ChartDisplay } = this.state;\n    console.log(this.state);\n    return (\n      <div className={styles.container}>\n        <TitleCard />\n        <Upload\n          messages={messages}\n          handleChange={this.changeData}\n          handleUpload={this.handleUpload}\n        />\n        <EnhancedTable users={messageData} swears={swears} />\n        <Dropdown changeChart={this.changeChart} />\n        <Chart users={messageData} chart={ChartDisplay} swears={swears} />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\nimport { lightBlue, indigo } from '@material-ui/core/colors';\n\nconst colorTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: lightBlue,\n    secondary: indigo,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={colorTheme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}