{"version":3,"sources":["App.module.css","components/Chart/Chart.jsx","components/Cards/TitleCard.jsx","components/Table/Table.jsx","components/Dropdown/Dropdown.jsx","App.js","index.js","components/Cards/Cards.module.css"],"names":["module","exports","generateNameLabels","data","participants","map","person","name","countMessages","count","countArr","forEach","messages","message","sender_name","Object","entries","value","push","Chart","props","users","title","chart","userData","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","barChart","lineChart","TitleCard","Card","className","styles","card","CardContent","Typography","variant","createData","swear_word_count","fat","carbs","protein","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","people","emptyRows","Math","min","length","Box","m","Paper","TableContainer","Table","aria-labelledby","size","aria-label","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","description","swear_words","n_word_count","activity_index","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","formControl","maxWidth","Dropdown","graph","setGraph","FormControl","InputLabel","Select","MenuItem","App","state","People","PeopleData","MessagesShort","ChartDisplay","this","setState","container","setOption","changeChart","Component","colorTheme","createMuiTheme","lightBlue","indigo","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e9786c0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","import React from 'react';\nimport messageCounter from '../../helpers/JSONProcessing';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst generateNameLabels = data => {\n  const participants = data.participants.map(person => person.name);\n  return participants;\n};\n\nconst countMessages = data => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    count[message.sender_name] += 1;\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst lineChart = userData => {\n  const data = {\n    labels: generateNameLabels(userData),\n    datasets: [\n      {\n        label: 'Number of Messages',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: countMessages(userData),\n      },\n    ],\n  };\n  return <Line data={data} options={{ maintainAspectRatio: false }} />;\n};\n\nconst barChart = (userData, type) => {\n  const data = {\n    labels: generateNameLabels(userData),\n    datasets: [\n      {\n        label: 'Number of Messages',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: countMessages(userData),\n      },\n    ],\n  };\n  return <Bar data={data} options={{ maintainAspectRatio: false }} />;\n};\n\nconst Chart = props => {\n  return (\n    <div>\n      <h2>{props.users.title}</h2>\n      {props.chart === 'Message Frequency'\n        ? barChart(props.users, props.chart)\n        : lineChart(props.users)}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport { Card, CardTitle, CardContent, Typography } from '@material-ui/core';\nimport styles from './Cards.module.css'\n\nconst TitleCard = () => {\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <Typography variant=\"h2\">Group Chat of Monkeys</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default TitleCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Switch,\n  makeStyles,\n  lighten,\n  Box,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport { messageCounter, badWordCounter } from '../../helpers/JSONProcessing';\n\nimport styles from './Table.module.css';\nimport peopleData from '../../data/people.json';\n\nfunction createData(name, swear_word_count, fat, carbs, protein) {\n  return { name, swear_word_count, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'User' },\n  {\n    id: 'description',\n    numeric: false,\n    disablePadding: false,\n    label: 'Nickname',\n  },\n  {\n    id: 'message_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'Message Count',\n  },\n  {\n    id: 'n_word_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'N Word Count',\n  },\n  {\n    id: 'activity_index',\n    numeric: true,\n    disablePadding: false,\n    label: 'Activity Index',\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all users' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color='inherit'\n          variant='subtitle1'\n          component='div'\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant='h6'\n          id='tableTitle'\n          component='div'\n        >\n          Group Members\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('swear_word_count');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [people, setPeopleData] = React.useState(props.users);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = people.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, people.length - page * rowsPerPage);\n\n  return (\n    <Box m={1}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}\n            aria-label='enhanced table'\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={people.length}\n            />\n            <TableBody>\n              {stableSort(people, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role='checkbox'\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component='th'\n                        id={labelId}\n                        scope='row'\n                        padding='none'\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align='left'>{row.description}</TableCell>\n                      <TableCell align='right'>{row.swear_words}</TableCell>\n                      <TableCell align='right'>{row.n_word_count}</TableCell>\n                      <TableCell align='right'>{row.activity_index}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={people.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 700,\n  },\n}));\n\nfunction Dropdown(props) {\n  const classes = useStyles();\n  const [graph, setGraph] = React.useState('Message Frequency');\n\n  const handleChange = event => {\n    setGraph(event.target.value);\n  };\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel id='demo-simple-select-outlined-label'>Graph Type</InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        value={graph}\n        onChange={handleChange}\n        label='graph-type'\n      >\n        <MenuItem value='Message Frequency'>Message Frequency</MenuItem>\n        <MenuItem value='Message Count'>Message Count</MenuItem>\n        <MenuItem value='N-Word Count'>N-Word Count</MenuItem>\n        <MenuItem value='Swear Word Count'>Swear Word Count</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  Chart,\n  Upload,\n  TitleCard,\n  EnhancedTable,\n  Dropdown,\n} from './components';\nimport styles from './App.module.css';\nimport PeopleData from './data/people.json';\nimport MessagesShort from './data/message_1.json';\n\nclass App extends Component {\n  state = {\n    People: PeopleData.people,\n    MessagesShort,\n    ChartDisplay: '',\n  };\n\n  changeChart(chart) {\n    this.setState = { ChartDisplay: chart };\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <TitleCard />\n        <EnhancedTable users={this.state.People} />\n        <Dropdown users={this.state.People} setOption={this.changeChart} />\n        <Chart\n          users={this.state.MessagesShort}\n          chart={this.state.ChartDisplay}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\nimport purple from '@material-ui/core/colors/purple'\nimport { deepPurple, lightBlue, indigo } from '@material-ui/core/colors';\n\nconst colorTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: lightBlue,\n    secondary: indigo,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={colorTheme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>, document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\"};"],"sourceRoot":""}