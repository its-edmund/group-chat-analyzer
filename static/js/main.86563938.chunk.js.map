{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.jsx","components/Upload/UploadButton.jsx","components/Cards/TitleCard.jsx","components/Table/Table.jsx","components/Dropdown/Dropdown.jsx","components/Upload/UploadDropdown.jsx","components/Upload/Upload.jsx","App.js","index.js"],"names":["module","exports","generateNameLabels","data","participants","map","person","name","Date","prototype","addDays","days","date","this","valueOf","setDate","getDate","toShortFormat","day","monthName","getMonth","year","getFullYear","generateDateRange","dt1","messages","length","timestamp_ms","dt2","dates","newdt","diff","getTime","Math","abs","round","diff_months","diffDays","ceil","i","push","generateDateLabels","datum","renderFrequencyData","user","count","countArr","forEach","message","sender_name","currDate","closest","reduce","prev","curr","Object","entries","value","renderData","type","swears","countNWord","countSwearWord","countMessages","content","split","word","toLowerCase","NWords","swear_words","Chart","props","users","title","chart","userData","numOfParticipants","labels","datasets","participant","index","label","fill","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","height","width","options","responsive","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","yAxes","lineChart","barChart","useStyles","makeStyles","theme","input","UploadButton","classes","accept","className","id","multiple","htmlFor","Button","variant","component","startIcon","size","TitleCard","Card","styles","card","CardContent","Typography","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","padding","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","primary","main","lighten","light","text","dark","flex","EnhancedTableToolbar","Toolbar","clsx","paper","marginBottom","table","minWidth","border","clip","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","min","Box","m","Paper","TableContainer","Table","aria-labelledby","aria-label","target","checked","newSelecteds","array","n","TableBody","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","labelId","messageCount","nWordCount","swearWordCount","hover","selectedIndex","indexOf","newSelected","concat","handleClick","role","tabIndex","scope","Number","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","onChange","formControl","maxWidth","Dropdown","FormControl","InputLabel","Select","defaultValue","e","changeChart","MenuItem","UploadDropdown","renderOptions","option","handleChange","Upload","Grid","container","alignItems","justify","item","App","initArray","message1","message2","state","messageData","ChartDisplay","bind","changeData","render","setState","find","currMessage","console","log","Component","colorTheme","createMuiTheme","lightBlue","secondary","indigo","ReactDOM","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.86563938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","import React from 'react';\nimport messageCounter from '../../helpers/JSONProcessing';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst generateNameLabels = data => {\n  const participants = data.participants.map(person => person.name);\n  return participants;\n};\n\nDate.prototype.addDays = function (days) {\n  let date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nDate.prototype.toShortFormat = function () {\n  let monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  let day = this.getDate();\n\n  let monthIndex = this.getMonth();\n  let monthName = monthNames[monthIndex];\n\n  let year = this.getFullYear();\n\n  return `${monthName} ${day}, ${year}`;\n};\n\nconst diff_months = (dt1, dt2) => {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= 60 * 60 * 24 * 7 * 4;\n  return Math.abs(Math.round(diff));\n};\n\nconst generateDateRange = data => {\n  let dt1 = new Date(data.messages[data.messages.length - 1].timestamp_ms);\n  let dt2 = new Date(data.messages[0].timestamp_ms);\n  let dates = [];\n  let newdt = dt1;\n  let monthDiff = diff_months(dt1, dt2);\n  if (monthDiff <= 2) {\n    const diffDays = Math.ceil((dt2 - dt1) / (1000 * 60 * 60 * 24));\n    for (let i = 0; i < diffDays; i += diffDays / 10) {\n      newdt = newdt.addDays(diffDays / 10);\n      dates.push(newdt);\n    }\n  }\n  return dates;\n};\n\nconst generateDateLabels = data => {\n  return generateDateRange(data).map(datum => datum.toShortFormat());\n};\n\nconst renderFrequencyData = (data, user) => {\n  const count = {};\n  const countArr = [];\n  const dates = generateDateRange(data).map(date => date.getTime());\n  dates.forEach(date => {\n    count[date] = 0;\n  });\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      let currDate = message.timestamp_ms;\n      let closest = dates.reduce(function (prev, curr) {\n        return Math.abs(curr - currDate) < Math.abs(prev - currDate)\n          ? curr\n          : prev;\n      });\n      count[closest] += 1;\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst renderData = (data, type, swears) => {\n  if (type === 'N-Word Count') {\n    return countNWord(data, swears);\n  } else if (type === 'Swear Word Count') {\n    return countSwearWord(data, swears);\n  } else if (type === 'Message Count') {\n    return countMessages(data);\n  }\n};\n\nconst countMessages = data => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    count[message.sender_name] += 1;\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst countNWord = (data, swears) => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    if ('content' in message) {\n      message.content.split(' ').forEach(word => {\n        if (word.toLowerCase() in swears.NWords) {\n          count[message.sender_name] += 1;\n        }\n      });\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst countSwearWord = (data, swears) => {\n  const count = {};\n  const countArr = [];\n  generateNameLabels(data).forEach(name => {\n    count[name] = 0;\n  });\n  data.messages.forEach(message => {\n    if ('content' in message) {\n      message.content.split(' ').forEach(word => {\n        if (word.toLowerCase() in swears.swear_words) {\n          count[message.sender_name] += 1;\n        }\n      });\n    }\n  });\n  Object.entries(count).forEach(([key, value]) => countArr.push(value));\n  return countArr;\n};\n\nconst lineChart = userData => {\n  const numOfParticipants = userData.participants.length;\n  const data = {\n    labels: generateDateLabels(userData),\n    datasets: userData.participants.map((participant, index) => {\n      return {\n        label: participant.name,\n        fill: 'false',\n        backgroundColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},0.8)`,\n        borderColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        hoverBorderColor: `rgba(${90 - index * (90 / numOfParticipants)},${\n          150 - index * (150 / numOfParticipants)\n        },${243 - index * (243 / numOfParticipants)},1)`,\n        data: renderFrequencyData(userData, participant.name),\n      };\n    }),\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    legend: { display: true },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n    },\n  };\n\n  return <Line data={data} height={400} width={600} options={options} />;\n};\n\nconst barChart = (userData, type, swears) => {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            color: 'rgba(166,166,166,0.5)',\n          },\n        },\n      ],\n    },\n  };\n  const data = {\n    labels: generateNameLabels(userData),\n    datasets: [\n      {\n        label: 'Number of Messages',\n        backgroundColor: 'rgba(30,150,243,0.8)',\n        borderColor: 'rgba(30,150,243,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(30,150,243,1)',\n        hoverBorderColor: 'rgba(30,150,243,1)',\n        data: renderData(userData, type, swears),\n      },\n    ],\n  };\n  return <Bar data={data} height={400} width={600} options={options} />;\n};\n\nconst Chart = props => {\n  return (\n    <div>\n      <h2>{props.users.title}</h2>\n      {props.chart === 'Message Frequency'\n        ? lineChart(props.users)\n        : barChart(props.users, props.chart, props.swears)}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none',\n  },\n}));\n\nconst UploadButton = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <input\n        accept='image/*'\n        className={classes.input}\n        id='contained-button-file'\n        multiple\n        type='file'\n      />\n      <label htmlFor='contained-button-file'>\n        <Button\n          variant='contained'\n          color='primary'\n          component='span'\n          startIcon={<CloudUploadIcon />}\n          size='large'\n        >\n          Upload\n        </Button>\n      </label>\n    </>\n  );\n};\n\nexport default UploadButton;\n","import React from 'react';\nimport { Card, CardTitle, CardContent, Typography } from '@material-ui/core';\nimport styles from './Cards.module.css'\n\nconst TitleCard = () => {\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <Typography variant=\"h2\">Group Chat of Monkeys</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default TitleCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  makeStyles,\n  lighten,\n  Box,\n} from '@material-ui/core';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'User' },\n  {\n    id: 'vulgarity',\n    numeric: true,\n    disablePadding: false,\n    label: 'Vulgarity Index',\n  },\n  {\n    id: 'message_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'Message Count',\n  },\n  {\n    id: 'n_word_count',\n    numeric: true,\n    disablePadding: false,\n    label: 'N Word Count',\n  },\n  {\n    id: 'activity_index',\n    numeric: true,\n    disablePadding: false,\n    label: 'Swear Word Count',\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'></TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.primary.main,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar className={clsx(classes.root)}>\n      <Typography\n        className={classes.title}\n        variant='h6'\n        id='tableTitle'\n        component='div'\n      >\n        Group Members\n      </Typography>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst countMessages = (data, user) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      count += 1;\n    }\n  });\n  return count;\n};\n\nconst countNWord = (data, user, swears) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      if ('content' in message) {\n        message.content.split(' ').forEach(word => {\n          if (word.toLowerCase() in swears.NWords) {\n            count += 1;\n          }\n        });\n      }\n    }\n  });\n  return count;\n};\n\nconst countSwearWord = (data, user, swears) => {\n  let count = 0;\n  data.messages.forEach(message => {\n    if (message.sender_name === user) {\n      if ('content' in message) {\n        message.content.split(' ').forEach(word => {\n          if (word.toLowerCase() in swears.swear_words) {\n            count += 1;\n          }\n        });\n      }\n    }\n  });\n  return count;\n};\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('swear_word_count');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.users.participants.array.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, props.users.participants.length - page * rowsPerPage);\n\n  return (\n    <Box m={1}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}\n            aria-label='enhanced table'\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.users.participants.length}\n            />\n            <TableBody>\n              {stableSort(\n                props.users.participants,\n                getComparator(order, orderBy)\n              )\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const messageCount = countMessages(props.users, row.name);\n                  const nWordCount = countNWord(\n                    props.users,\n                    row.name,\n                    props.swears\n                  );\n                  const swearWordCount = countSwearWord(\n                    props.users,\n                    row.name,\n                    props.swears\n                  );\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={row.name}\n                    >\n                      <TableCell padding='checkbox'></TableCell>\n                      <TableCell\n                        component='th'\n                        id={labelId}\n                        scope='row'\n                        padding='none'\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align='right'>\n                        {Number(\n                          Math.round(\n                            (swearWordCount / messageCount) * 10 + 'e3'\n                          ) + 'e-3'\n                        )}\n                      </TableCell>\n                      <TableCell align='right'>{messageCount}</TableCell>\n                      <TableCell align='right'>{nWordCount}</TableCell>\n                      <TableCell align='right'>{swearWordCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={props.users.participants.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 700,\n  },\n}));\n\nfunction Dropdown(props) {\n  const classes = useStyles();\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel id='demo-simple-select-outlined-label'>Graph Type</InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        defaultValue='Message Frequency'\n        onChange={e => props.changeChart(e.target.value)}\n        label='graph-type'\n      >\n        <MenuItem value='Message Frequency'>Message Frequency</MenuItem>\n        <MenuItem value='Message Count'>Message Count</MenuItem>\n        <MenuItem value='N-Word Count'>N-Word Count</MenuItem>\n        <MenuItem value='Swear Word Count'>Swear Word Count</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 700,\n  },\n}));\n\nfunction UploadDropdown(props) {\n  const classes = useStyles();\n\n  const renderOptions = props.options.map(option => {\n    return <MenuItem value={option.title}> {option.title}</MenuItem>;\n  });\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel id='demo-simple-select-outlined-label'>\n        Chat Selection\n      </InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        defaultValue={props.options[0].title}\n        onChange={e => props.handleChange(e.target.value)}\n        label='Chat-Selection'\n      >\n        {renderOptions}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default UploadDropdown;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UploadDropdown from './UploadDropdown';\nimport UploadButton from './UploadButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst Upload = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems='center' justify='center'>\n        <Grid item>\n          <UploadButton />\n        </Grid>\n        <Grid item>\n          <UploadDropdown\n            options={props.messages}\n            handleChange={props.handleChange}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Chart,\n  TitleCard,\n  EnhancedTable,\n  Dropdown,\n  Upload,\n} from './components';\nimport styles from './App.module.css';\nimport message1 from './data/message_sample.json';\nimport message2 from './data/message_sample_2.json';\nimport swears from './data/swears.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const initArray = [message1, message2];\n    this.state = {\n      messages: initArray,\n      messageData: message1,\n      ChartDisplay: 'Message Frequency',\n    };\n\n    this.changeChart = this.changeChart.bind(this);\n    this.changeData = this.changeData.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  changeChart(chart) {\n    this.setState({ ChartDisplay: chart });\n  }\n\n  changeData(name) {\n    let message = this.state.messages.find(\n      currMessage => currMessage.title === name\n    );\n    console.log(message);\n    this.setState({ messageData: message });\n  }\n\n  render() {\n    const { messages, messageData, ChartDisplay } = this.state;\n    console.log(this.state);\n    return (\n      <div className={styles.container}>\n        <TitleCard />\n        <Upload messages={messages} handleChange={this.changeData} />\n        <EnhancedTable users={messageData} swears={swears} />\n        <Dropdown changeChart={this.changeChart} />\n        <Chart users={messageData} chart={ChartDisplay} swears={swears} />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\nimport purple from '@material-ui/core/colors/purple'\nimport { deepPurple, lightBlue, indigo } from '@material-ui/core/colors';\n\nconst colorTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: lightBlue,\n    secondary: indigo,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={colorTheme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>, document.getElementById('root')\n);"],"sourceRoot":""}